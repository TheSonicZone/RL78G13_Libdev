   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	MDUC	=	0xf00e8
  26                             	MDAL	=	0xffff0
  27                             	MDAH	=	0xffff2
  28                             	MDBL	=	0xffff6
  29                             	MDBH	=	0xffff4
  30                             	MDCL	=	0xf00e0
  31                             	MDCH	=	0xf00e2
  32                             	.text
  33                             	.Ltext0:
  34                             		.section	.text.SetCPUClockX1,"ax",@progbits
  35                             		.global	_SetCPUClockX1
  37                             	_SetCPUClockX1:
  38                             	.LFB0:
  39                             		.file 1 "../core/rl78_clock_sys.c"
   1:../core/rl78_clock_sys.c **** //
   2:../core/rl78_clock_sys.c **** //			Filename: rl78_clock_sys.c
   3:../core/rl78_clock_sys.c **** //          Clock System Control Functions
   4:../core/rl78_clock_sys.c **** //
   5:../core/rl78_clock_sys.c **** //			Small portions based on code provided by Renesas Electronics via Appilet
   6:../core/rl78_clock_sys.c **** //          (changed for ease of use and logical functionality)
   7:../core/rl78_clock_sys.c **** //
   8:../core/rl78_clock_sys.c **** //			Copyright (C) 2024  The Sonic Zone (PTY) LTD
   9:../core/rl78_clock_sys.c **** //
  10:../core/rl78_clock_sys.c **** //			This program is free software: you can redistribute it and/or modify
  11:../core/rl78_clock_sys.c **** //			it under the terms of the GNU General Public License as published by
  12:../core/rl78_clock_sys.c **** //			the Free Software Foundation, either version 3 of the License, or
  13:../core/rl78_clock_sys.c **** //			(at your option) any later version.
  14:../core/rl78_clock_sys.c **** //
  15:../core/rl78_clock_sys.c **** //			This program is distributed in the hope that it will be useful,
  16:../core/rl78_clock_sys.c **** //			but WITHOUT ANY WARRANTY; without even the implied warranty of
  17:../core/rl78_clock_sys.c **** //			MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  18:../core/rl78_clock_sys.c **** //			GNU General Public License for more details.
  19:../core/rl78_clock_sys.c **** //
  20:../core/rl78_clock_sys.c **** //			You should have received a copy of the GNU General Public License
  21:../core/rl78_clock_sys.c **** //			along with this program.  If not, see <http://www.gnu.org/licenses/>.
  22:../core/rl78_clock_sys.c **** //---------------------------------------------------------------------------------------
  23:../core/rl78_clock_sys.c **** #include <inttypes.h>
  24:../core/rl78_clock_sys.c **** #include "../core/rl78_g13.h"
  25:../core/rl78_clock_sys.c **** #include "../core/rl78_clock_sys.h"
  26:../core/rl78_clock_sys.c **** #include "../core/iodefine.h"
  27:../core/rl78_clock_sys.c **** #include "../core/iodefine_ext.h"
  28:../core/rl78_clock_sys.c **** 
  29:../core/rl78_clock_sys.c **** //-------------------------------------------------------------------------------------------
  30:../core/rl78_clock_sys.c **** // Name: SetCPUClockX1
  31:../core/rl78_clock_sys.c **** // Function: Set the CPU clock to the xtal oscillator X1 and turn off the on-chip oscillator
  32:../core/rl78_clock_sys.c **** // Parameters: void
  33:../core/rl78_clock_sys.c **** // Returns: void
  34:../core/rl78_clock_sys.c **** //--------------------------------------------------------------------------------------------
  35:../core/rl78_clock_sys.c **** void SetCPUClockX1(void){
  40                             		.loc 1 35 0
  36:../core/rl78_clock_sys.c **** 	CSS = 0;
  41                             		.loc 1 36 0
  42 0000 C9 F0 A4 FF             		movw	r8, #-92
  43 0004 AD F0                   		movw	ax, r8
  44 0006 BD F4                   		movw	r12, ax
  45 0008 FA F4                   		movw	hl, r12
  46 000a 8B                      		mov	a, [hl]
  47 000b 9D F2                   		mov	r10, a
  48 000d 5A F2 BF                		and	r10, #-65
  49 0010 AD F0                   		movw	ax, r8
  50 0012 EA F4                   		movw	de, r12
  51 0014 8D F2                   		mov	a, r10
  52 0016 99                      		mov	[de], a
  37:../core/rl78_clock_sys.c **** 	MCM0 = 1;
  53                             		.loc 1 37 0
  54 0017 C9 F0 A4 FF             		movw	r8, #-92
  55 001b AD F0                   		movw	ax, r8
  56 001d BD F4                   		movw	r12, ax
  57 001f FA F4                   		movw	hl, r12
  58 0021 8B                      		mov	a, [hl]
  59 0022 9D F2                   		mov	r10, a
  60 0024 6A F2 10                		or	r10, #16
  61 0027 AD F0                   		movw	ax, r8
  62 0029 EA F4                   		movw	de, r12
  63 002b 8D F2                   		mov	a, r10
  64 002d 99                      		mov	[de], a
  38:../core/rl78_clock_sys.c **** 	HIOSTOP = 1;
  65                             		.loc 1 38 0
  66 002e C9 F0 A1 FF             		movw	r8, #-95
  67 0032 AD F0                   		movw	ax, r8
  68 0034 BD F4                   		movw	r12, ax
  69 0036 FA F4                   		movw	hl, r12
  70 0038 8B                      		mov	a, [hl]
  71 0039 9D F2                   		mov	r10, a
  72 003b 6A F2 01                		or	r10, #1
  73 003e AD F0                   		movw	ax, r8
  74 0040 EA F4                   		movw	de, r12
  75 0042 8D F2                   		mov	a, r10
  76 0044 99                      		mov	[de], a
  39:../core/rl78_clock_sys.c **** }
  77                             		.loc 1 39 0
  78 0045 D7                      		ret
  79                             	.LFE0:
  81                             		.section	.text.InitClockSystem,"ax",@progbits
  82                             		.global	_InitClockSystem
  84                             	_InitClockSystem:
  85                             	.LFB1:
  40:../core/rl78_clock_sys.c **** 
  41:../core/rl78_clock_sys.c **** //--------------------------------------------------------------------------------------------
  42:../core/rl78_clock_sys.c **** // Name: InitClockSys
  43:../core/rl78_clock_sys.c **** // Function: Initialise the clock system per the provided parameters
  44:../core/rl78_clock_sys.c **** //           if EXT clock oscillator is used, this function will set the alternate function
  45:../core/rl78_clock_sys.c **** //           on the appropriate GPIO pins
  46:../core/rl78_clock_sys.c **** // Parameters: Main Clock Mode, Subsystem Clock Mode
  47:../core/rl78_clock_sys.c **** // Returns: Result of operation
  48:../core/rl78_clock_sys.c **** //--------------------------------------------------------------------------------------------
  49:../core/rl78_clock_sys.c **** int InitClockSystem(unsigned char main_mode, unsigned char subsystem_mode){
  86                             		.loc 1 49 0
  87                             		; start of function
  88                             		; locals: 10 bytes
  89                             		; uses ES register
  90 0000 20 0A                   		subw	sp, #10
  91                             	.LCFI0:
  50:../core/rl78_clock_sys.c **** 
  51:../core/rl78_clock_sys.c **** 	uint8_t CMC_Value = 0;
  92                             		.loc 1 51 0
  93 0002 F1                      		clrb	a
  94 0003 98 09                   		mov	[sp+9], a
  52:../core/rl78_clock_sys.c **** 	uint8_t OSTC_Value = 0;
  95                             		.loc 1 52 0
  96 0005 F1                      		clrb	a
  97 0006 98 03                   		mov	[sp+3], a
  53:../core/rl78_clock_sys.c **** 	uint8_t OSTC_Comparison_Value = 0;
  98                             		.loc 1 53 0
  99 0008 F1                      		clrb	a
 100 0009 98 02                   		mov	[sp+2], a
  54:../core/rl78_clock_sys.c **** 	uint32_t XT1DelayCounter;
  55:../core/rl78_clock_sys.c **** 
  56:../core/rl78_clock_sys.c **** 	PIOR = 0x00;			// Peripheral I/O redirections cleared
 101                             		.loc 1 56 0
 102 000b C9 F0 77 00             		movw	r8, #119
 103 000f AD F0                   		movw	ax, r8
 104 0011 BD F2                   		movw	r10, ax
 105 0013 EA F2                   		movw	de, r10
 106 0015 F1                      		clrb	a
 107 0016 99                      		mov	[de], a
  57:../core/rl78_clock_sys.c **** 
  58:../core/rl78_clock_sys.c **** 	// Main clock source setting
  59:../core/rl78_clock_sys.c **** 	switch(main_mode){
 108                             		.loc 1 59 0
 109 0017 88 0E                   		mov	a, [sp+14]
 110 0019 31 8E                   		shrw	ax, 8
 111 001b BD F0                   		movw	r8, ax
 112 001d 44 01 00                		cmpw	ax, #1
 113 0020 61 F8                   		 sknz
 114 0022 EC 63 00 00             		 br	!!.L4
 115 0026 AD F0                   		movw	ax, r8
 116 0028 44 01 00                		cmpw	ax, #1
 117 002b 71 FF                   		 xor1	CY, a.7
 118 002d 61 F3                   		 sknh
 119 002f EC 42 00 00             		 br	!!.L5
 120 0033 AD F0                   		movw	ax, r8
 121 0035 44 00 00                		cmpw	ax, #0
 122 0038 61 F8                   		 sknz
 123 003a EC 5C 00 00             		 br	!!.L6
 124 003e EC 7B 00 00             		br	!!.L3
 125                             	.L5:
 126 0042 AD F0                   		movw	ax, r8
 127 0044 44 02 00                		cmpw	ax, #2
 128 0047 61 F8                   		 sknz
 129 0049 EC 6B 00 00             		 br	!!.L7
 130 004d AD F0                   		movw	ax, r8
 131 004f 44 03 00                		cmpw	ax, #3
 132 0052 61 F8                   		 sknz
 133 0054 EC 73 00 00             		 br	!!.L8
 134 0058 EC 7B 00 00             		br	!!.L3
 135                             	.L6:
  60:../core/rl78_clock_sys.c **** 
  61:../core/rl78_clock_sys.c **** 	case ONCHIP_HS:			// HS on-chip oscillator mode, make sure the clock speed is set in OPTION
  62:../core/rl78_clock_sys.c **** 		CMC_Value = X1_PINS_GPIO;
 136                             		.loc 1 62 0
 137 005c F1                      		clrb	a
 138 005d 98 09                   		mov	[sp+9], a
  63:../core/rl78_clock_sys.c **** 		break;
 139                             		.loc 1 63 0
 140 005f EC 84 00 00             		br	!!.L9
 141                             	.L4:
  64:../core/rl78_clock_sys.c **** 
  65:../core/rl78_clock_sys.c **** 	case X1_NORMAL:
  66:../core/rl78_clock_sys.c **** 		// External X1 oscillator is requested, prepare bit settings for write-once register CMC
  67:../core/rl78_clock_sys.c **** 		CMC_Value = X1_OSCILLATOR | X1_LOWSPD;
 142                             		.loc 1 67 0
 143 0063 51 40                   		mov	a, #64
 144 0065 98 09                   		mov	[sp+9], a
  68:../core/rl78_clock_sys.c **** 		break;
 145                             		.loc 1 68 0
 146 0067 EC 84 00 00             		br	!!.L9
 147                             	.L7:
  69:../core/rl78_clock_sys.c **** 	case X1_HIGHSPEED:
  70:../core/rl78_clock_sys.c **** 		CMC_Value = X1_OSCILLATOR | X1_HIGHSPD;
 148                             		.loc 1 70 0
 149 006b 51 41                   		mov	a, #65
 150 006d 98 09                   		mov	[sp+9], a
  71:../core/rl78_clock_sys.c **** 		break;
 151                             		.loc 1 71 0
 152 006f EC 84 00 00             		br	!!.L9
 153                             	.L8:
  72:../core/rl78_clock_sys.c **** 
  73:../core/rl78_clock_sys.c **** 	case X1_EXTERNAL:
  74:../core/rl78_clock_sys.c **** 		CMC_Value = X1_EXTERNAL_CLK;
 154                             		.loc 1 74 0
 155 0073 51 C0                   		mov	a, #-64
 156 0075 98 09                   		mov	[sp+9], a
  75:../core/rl78_clock_sys.c **** 		break;
 157                             		.loc 1 75 0
 158 0077 EC 84 00 00             		br	!!.L9
 159                             	.L3:
  76:../core/rl78_clock_sys.c **** 
  77:../core/rl78_clock_sys.c **** 	default:
  78:../core/rl78_clock_sys.c **** 		return -1;		// invalid value, return -1
 160                             		.loc 1 78 0
 161 007b 30 FF FF                		movw	ax, #-1
 162 007e B8 00                   		movw	[sp], ax
 163 0080 EC FC 01 00             		br	!!.L10
 164                             	.L9:
  79:../core/rl78_clock_sys.c **** 
  80:../core/rl78_clock_sys.c **** 	}
  81:../core/rl78_clock_sys.c **** 
  82:../core/rl78_clock_sys.c **** 	// Sub clock source setting
  83:../core/rl78_clock_sys.c **** 	switch(subsystem_mode){
 165                             		.loc 1 83 0
 166 0084 88 10                   		mov	a, [sp+16]
 167 0086 31 8E                   		shrw	ax, 8
 168 0088 BD F0                   		movw	r8, ax
 169 008a 44 02 00                		cmpw	ax, #2
 170 008d 61 F8                   		 sknz
 171 008f EC DE 00 00             		 br	!!.L12
 172 0093 AD F0                   		movw	ax, r8
 173 0095 44 02 00                		cmpw	ax, #2
 174 0098 71 FF                   		 xor1	CY, a.7
 175 009a 61 F3                   		 sknh
 176 009c EC BA 00 00             		 br	!!.L13
 177 00a0 AD F0                   		movw	ax, r8
 178 00a2 44 00 00                		cmpw	ax, #0
 179 00a5 61 F8                   		 sknz
 180 00a7 EC 05 01 00             		 br	!!.L25
 181 00ab AD F0                   		movw	ax, r8
 182 00ad 44 01 00                		cmpw	ax, #1
 183 00b0 61 F8                   		 sknz
 184 00b2 EC D4 00 00             		 br	!!.L15
 185 00b6 EC FC 00 00             		br	!!.L11
 186                             	.L13:
 187 00ba AD F0                   		movw	ax, r8
 188 00bc 44 03 00                		cmpw	ax, #3
 189 00bf 61 F8                   		 sknz
 190 00c1 EC E8 00 00             		 br	!!.L16
 191 00c5 AD F0                   		movw	ax, r8
 192 00c7 44 04 00                		cmpw	ax, #4
 193 00ca 61 F8                   		 sknz
 194 00cc EC F2 00 00             		 br	!!.L17
 195 00d0 EC FC 00 00             		br	!!.L11
 196                             	.L15:
  84:../core/rl78_clock_sys.c **** 	case ONCHIP_LS:
  85:../core/rl78_clock_sys.c **** 		CMC_Value = CMC_Value | XT1_PINS_GPIO;
  86:../core/rl78_clock_sys.c **** 		break;
  87:../core/rl78_clock_sys.c **** 
  88:../core/rl78_clock_sys.c **** 	case XT1_LOWPOWER:
  89:../core/rl78_clock_sys.c **** 		CMC_Value = CMC_Value | XT1_OSCILLATOR | XT1_LOWPWR;
 197                             		.loc 1 89 0
 198 00d4 88 09                   		mov	a, [sp+9]
 199 00d6 6C 10                   		or	a, #16
 200 00d8 98 09                   		mov	[sp+9], a
  90:../core/rl78_clock_sys.c **** 		break;
 201                             		.loc 1 90 0
 202 00da EC 06 01 00             		br	!!.L18
 203                             	.L12:
  91:../core/rl78_clock_sys.c **** 
  92:../core/rl78_clock_sys.c **** 	case XT1_NORMAL:
  93:../core/rl78_clock_sys.c **** 		CMC_Value = CMC_Value | XT1_OSCILLATOR | XT1_NORM;
 204                             		.loc 1 93 0
 205 00de 88 09                   		mov	a, [sp+9]
 206 00e0 6C 12                   		or	a, #18
 207 00e2 98 09                   		mov	[sp+9], a
  94:../core/rl78_clock_sys.c **** 		break;
 208                             		.loc 1 94 0
 209 00e4 EC 06 01 00             		br	!!.L18
 210                             	.L16:
  95:../core/rl78_clock_sys.c **** 
  96:../core/rl78_clock_sys.c **** 	case XT1_ULTRALOW:
  97:../core/rl78_clock_sys.c **** 		CMC_Value = CMC_Value | XT1_OSCILLATOR | XT1_ULP;
 211                             		.loc 1 97 0
 212 00e8 88 09                   		mov	a, [sp+9]
 213 00ea 6C 14                   		or	a, #20
 214 00ec 98 09                   		mov	[sp+9], a
  98:../core/rl78_clock_sys.c **** 		break;
 215                             		.loc 1 98 0
 216 00ee EC 06 01 00             		br	!!.L18
 217                             	.L17:
  99:../core/rl78_clock_sys.c **** 
 100:../core/rl78_clock_sys.c **** 	case XT1_EXTERNAL:
 101:../core/rl78_clock_sys.c **** 		CMC_Value = CMC_Value | XT1_EXTERNAL_CLK;
 218                             		.loc 1 101 0
 219 00f2 88 09                   		mov	a, [sp+9]
 220 00f4 6C 30                   		or	a, #48
 221 00f6 98 09                   		mov	[sp+9], a
 102:../core/rl78_clock_sys.c **** 		break;
 222                             		.loc 1 102 0
 223 00f8 EC 06 01 00             		br	!!.L18
 224                             	.L11:
 103:../core/rl78_clock_sys.c **** 
 104:../core/rl78_clock_sys.c **** 	default:
 105:../core/rl78_clock_sys.c **** 		return -1;		// invalid value, return -1
 225                             		.loc 1 105 0
 226 00fc 30 FF FF                		movw	ax, #-1
 227 00ff B8 00                   		movw	[sp], ax
 228 0101 EC FC 01 00             		br	!!.L10
 229                             	.L25:
  86:../core/rl78_clock_sys.c **** 
 230                             		.loc 1 86 0
 231 0105 00                      		nop
 232                             	.L18:
 106:../core/rl78_clock_sys.c **** 
 107:../core/rl78_clock_sys.c **** 
 108:../core/rl78_clock_sys.c **** 	}
 109:../core/rl78_clock_sys.c **** 
 110:../core/rl78_clock_sys.c **** 	// Various bit settings were prepared, now we can write to write-once register CMC
 111:../core/rl78_clock_sys.c **** 	CMC = CMC_Value;
 233                             		.loc 1 111 0
 234 0106 C9 F0 A0 FF             		movw	r8, #-96
 235 010a 88 09                   		mov	a, [sp+9]
 236 010c 9D F2                   		mov	r10, a
 237 010e AD F0                   		movw	ax, r8
 238 0110 BD F4                   		movw	r12, ax
 239 0112 EA F4                   		movw	de, r12
 240 0114 8D F2                   		mov	a, r10
 241 0116 99                      		mov	[de], a
 112:../core/rl78_clock_sys.c **** 
 113:../core/rl78_clock_sys.c **** 
 114:../core/rl78_clock_sys.c **** 	if(main_mode != ONCHIP_HS && main_mode != X1_EXTERNAL){
 242                             		.loc 1 114 0
 243 0117 88 0E                   		mov	a, [sp+14]
 244 0119 D1                      		cmp0	a
 245 011a 61 F8                   		 sknz
 246 011c EC 80 01 00             		 br	!!.L19
 247                             		.loc 1 114 0 is_stmt 0 discriminator 1
 248 0120 88 0E                   		mov	a, [sp+14]
 249 0122 4C 03                   		cmp	a, #3
 250 0124 61 F8                   		 sknz
 251 0126 EC 80 01 00             		 br	!!.L19
 115:../core/rl78_clock_sys.c **** 		// Set up oscillator stabilization timer for main clock oscillator XT
 116:../core/rl78_clock_sys.c **** 		//--------------------------------------------------------------------------------
 117:../core/rl78_clock_sys.c **** 		OSTS = STAB_WAIT_7;  // Set longest wait period
 252                             		.loc 1 117 0 is_stmt 1
 253 012a C9 F0 A3 FF             		movw	r8, #-93
 254 012e AD F0                   		movw	ax, r8
 255 0130 BD F2                   		movw	r10, ax
 256 0132 EA F2                   		movw	de, r10
 257 0134 51 07                   		mov	a, #7
 258 0136 99                      		mov	[de], a
 118:../core/rl78_clock_sys.c **** 		MSTOP = 0x00;		 // Clear MSTOP bit in CSC register
 259                             		.loc 1 118 0
 260 0137 C9 F0 A1 FF             		movw	r8, #-95
 261 013b AD F0                   		movw	ax, r8
 262 013d BD F4                   		movw	r12, ax
 263 013f FA F4                   		movw	hl, r12
 264 0141 8B                      		mov	a, [hl]
 265 0142 9D F2                   		mov	r10, a
 266 0144 5A F2 7F                		and	r10, #127
 267 0147 AD F0                   		movw	ax, r8
 268 0149 EA F4                   		movw	de, r12
 269 014b 8D F2                   		mov	a, r10
 270 014d 99                      		mov	[de], a
 119:../core/rl78_clock_sys.c **** 
 120:../core/rl78_clock_sys.c **** 		// Poll OSTC, it should equal a specific constant value as defined in the header, when
 121:../core/rl78_clock_sys.c **** 		// the stabilisation time is over
 122:../core/rl78_clock_sys.c **** 		//-------------------------------------------------------------------------------------
 123:../core/rl78_clock_sys.c **** 		OSTC_Comparison_Value = OSCSTAB_WAIT_7;
 271                             		.loc 1 123 0
 272 014e 51 FF                   		mov	a, #-1
 273 0150 98 02                   		mov	[sp+2], a
 274                             	.L21:
 124:../core/rl78_clock_sys.c **** 		for(;;){
 125:../core/rl78_clock_sys.c **** 			OSTC_Value = OSTC;						// Read OSTC
 275                             		.loc 1 125 0
 276 0152 C9 F0 A2 FF             		movw	r8, #-94
 277 0156 AD F0                   		movw	ax, r8
 278 0158 BD F2                   		movw	r10, ax
 279 015a FA F2                   		movw	hl, r10
 280 015c 8B                      		mov	a, [hl]
 281 015d 9D F0                   		mov	r8, a
 282 015f 98 03                   		mov	[sp+3], a
 126:../core/rl78_clock_sys.c **** 			OSTC_Value &= OSTC_Comparison_Value;	// AND it with mask comparison value
 283                             		.loc 1 126 0
 284 0161 88 02                   		mov	a, [sp+2]
 285 0163 72                      		mov	c, a
 286 0164 88 03                   		mov	a, [sp+3]
 287 0166 61 5A                   		and	a, c
 288 0168 98 03                   		mov	[sp+3], a
 127:../core/rl78_clock_sys.c **** 			if(OSTC_Value == OSTC_Comparison_Value){
 289                             		.loc 1 127 0
 290 016a 88 02                   		mov	a, [sp+2]
 291 016c 9D F0                   		mov	r8, a
 292 016e 88 03                   		mov	a, [sp+3]
 293 0170 4B F0                   		cmp	a, r8
 294 0172 61 E8                   		 skz
 295 0174 EC 7C 01 00             		 br	!!.L20
 128:../core/rl78_clock_sys.c **** 				break;
 296                             		.loc 1 128 0
 297 0178 EC 80 01 00             		br	!!.L19
 298                             	.L20:
 129:../core/rl78_clock_sys.c **** 			}
 130:../core/rl78_clock_sys.c **** 
 131:../core/rl78_clock_sys.c **** 		};
 299                             		.loc 1 131 0
 300 017c EC 52 01 00             		br	!!.L21
 301                             	.L19:
 132:../core/rl78_clock_sys.c **** 	}
 133:../core/rl78_clock_sys.c **** 
 134:../core/rl78_clock_sys.c **** 	if(subsystem_mode != ONCHIP_LS && subsystem_mode != XT1_EXTERNAL){
 302                             		.loc 1 134 0
 303 0180 88 10                   		mov	a, [sp+16]
 304 0182 D1                      		cmp0	a
 305 0183 61 F8                   		 sknz
 306 0185 EC D5 01 00             		 br	!!.L22
 307                             		.loc 1 134 0 is_stmt 0 discriminator 1
 308 0189 88 10                   		mov	a, [sp+16]
 309 018b 4C 04                   		cmp	a, #4
 310 018d 61 F8                   		 sknz
 311 018f EC D5 01 00             		 br	!!.L22
 135:../core/rl78_clock_sys.c **** 		// Enable sub clock oscillator XT1
 136:../core/rl78_clock_sys.c **** 		//---------------------------------
 137:../core/rl78_clock_sys.c **** 		XTSTOP = 0;
 312                             		.loc 1 137 0 is_stmt 1
 313 0193 C9 F0 A1 FF             		movw	r8, #-95
 314 0197 AD F0                   		movw	ax, r8
 315 0199 BD F4                   		movw	r12, ax
 316 019b FA F4                   		movw	hl, r12
 317 019d 8B                      		mov	a, [hl]
 318 019e 9D F2                   		mov	r10, a
 319 01a0 5A F2 BF                		and	r10, #-65
 320 01a3 AD F0                   		movw	ax, r8
 321 01a5 EA F4                   		movw	de, r12
 322 01a7 8D F2                   		mov	a, r10
 323 01a9 99                      		mov	[de], a
 138:../core/rl78_clock_sys.c **** 
 139:../core/rl78_clock_sys.c **** 		// Wait for the sub-clock oscillator to stabilise
 140:../core/rl78_clock_sys.c **** 		//-----------------------------------------------
 141:../core/rl78_clock_sys.c **** 		for(XT1DelayCounter = 0; XT1DelayCounter <= XT1_Stab_Time; XT1DelayCounter++){
 324                             		.loc 1 141 0
 325 01aa F6                      		clrw	ax
 326 01ab B8 04                   		movw	[sp+4], ax
 327 01ad F6                      		clrw	ax
 328 01ae B8 06                   		movw	[sp+6], ax
 329 01b0 EC C3 01 00             		br	!!.L23
 330                             	.L24:
 142:../core/rl78_clock_sys.c **** 			NOP();
 331                             		.loc 1 142 0 discriminator 3
 332                             	 ; 142 "../core/rl78_clock_sys.c" 1
 333 01b4 00                      		nop
 334                             	 ; 0 "" 2
 141:../core/rl78_clock_sys.c **** 			NOP();
 335                             		.loc 1 141 0 discriminator 3
 336 01b5 A8 04                   		movw ax, [sp+4]
 337 01b7 04 01 00                		addw ax, #1
 338 01ba B8 04                   		movw [sp+4], ax
 339 01bc A8 06                   		movw ax, [sp+6]
 340 01be 61 D8                   		sknc
 341 01c0 A1                      		incw ax
 342 01c1 B8 06                   		movw [sp+6],ax
 343                             	.L23:
 141:../core/rl78_clock_sys.c **** 			NOP();
 344                             		.loc 1 141 0 is_stmt 0 discriminator 1
 345 01c3 A8 06                   		movw	ax, [sp+6]
 346 01c5 44 00 00                		 cmpw	ax, #0
 347 01c8 A8 04                   		 movw	ax, [sp+4]
 348 01ca 61 F8                   		 sknz
 349 01cc 44 A0 00                		 cmpw	ax, #160
 350 01cf 61 E3                   		 skh
 351 01d1 EC B4 01 00             		 br	!!.L24
 352                             	.L22:
 143:../core/rl78_clock_sys.c **** 		}
 144:../core/rl78_clock_sys.c **** 
 145:../core/rl78_clock_sys.c **** 	}
 146:../core/rl78_clock_sys.c **** 	// Enable clock distribution
 147:../core/rl78_clock_sys.c **** 	//--------------------------
 148:../core/rl78_clock_sys.c **** 	OSMC = RTCLPC | WUTMMCK0;
 353                             		.loc 1 148 0 is_stmt 1
 354 01d5 C9 F0 F3 00             		movw	r8, #243
 355 01d9 AD F0                   		movw	ax, r8
 356 01db BD F2                   		movw	r10, ax
 357 01dd EA F2                   		movw	de, r10
 358 01df 51 90                   		mov	a, #-112
 359 01e1 99                      		mov	[de], a
 149:../core/rl78_clock_sys.c **** 	CSS = 0;					// CPU clock is set to Fmain
 360                             		.loc 1 149 0
 361 01e2 C9 F0 A4 FF             		movw	r8, #-92
 362 01e6 AD F0                   		movw	ax, r8
 363 01e8 BD F4                   		movw	r12, ax
 364 01ea FA F4                   		movw	hl, r12
 365 01ec 8B                      		mov	a, [hl]
 366 01ed 9D F2                   		mov	r10, a
 367 01ef 5A F2 BF                		and	r10, #-65
 368 01f2 AD F0                   		movw	ax, r8
 369 01f4 EA F4                   		movw	de, r12
 370 01f6 8D F2                   		mov	a, r10
 371 01f8 99                      		mov	[de], a
 150:../core/rl78_clock_sys.c **** 	return 0;
 372                             		.loc 1 150 0
 373 01f9 F6                      		clrw	ax
 374 01fa B8 00                   		movw	[sp], ax
 375                             	.L10:
 376 01fc A8 00                   		movw	ax, [sp]
 377 01fe BD F0                   		movw	r8, ax
 151:../core/rl78_clock_sys.c **** }
 378                             		.loc 1 151 0
 379 0200 10 0A                   		addw	sp, #10
 380 0202 D7                      		ret
 381                             	.LFE1:
 421                             	.Letext0:
 422                             		.file 2 "c:\\programdata\\gcc for renesas rl78 4.9.2.202201-gnurl78-elf\\rl78-elf\\rl78-elf\\rl78-
 423                             		.file 3 "c:\\programdata\\gcc for renesas rl78 4.9.2.202201-gnurl78-elf\\rl78-elf\\rl78-elf\\rl78-
 424                             		.file 4 "../core/../core/rl78_clock_sys.h"
 425                             		.file 5 "../core/../core/iodefine.h"
