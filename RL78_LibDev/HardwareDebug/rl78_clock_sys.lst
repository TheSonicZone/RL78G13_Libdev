   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	MDUC	=	0xf00e8
  26                             	MDAL	=	0xffff0
  27                             	MDAH	=	0xffff2
  28                             	MDBL	=	0xffff6
  29                             	MDBH	=	0xffff4
  30                             	MDCL	=	0xf00e0
  31                             	MDCH	=	0xf00e2
  32                             	.text
  33                             	.Ltext0:
  34                             		.section	.text.InitClockSystem,"ax",@progbits
  35                             		.global	_InitClockSystem
  37                             	_InitClockSystem:
  38                             	.LFB0:
  39                             		.file 1 "../core/rl78_clock_sys.c"
   1:../core/rl78_clock_sys.c **** //
   2:../core/rl78_clock_sys.c **** //			Filename: rl78_clock_sys.c
   3:../core/rl78_clock_sys.c **** //          Clock System Control Functions
   4:../core/rl78_clock_sys.c **** //
   5:../core/rl78_clock_sys.c **** //			Small portions based on code provided by Renesas Electronics via Appilet
   6:../core/rl78_clock_sys.c **** //          (changed for ease of use and logical functionality)
   7:../core/rl78_clock_sys.c **** //
   8:../core/rl78_clock_sys.c **** //			Copyright (C) 2024  The Sonic Zone (PTY) LTD
   9:../core/rl78_clock_sys.c **** //
  10:../core/rl78_clock_sys.c **** //			This program is free software: you can redistribute it and/or modify
  11:../core/rl78_clock_sys.c **** //			it under the terms of the GNU General Public License as published by
  12:../core/rl78_clock_sys.c **** //			the Free Software Foundation, either version 3 of the License, or
  13:../core/rl78_clock_sys.c **** //			(at your option) any later version.
  14:../core/rl78_clock_sys.c **** //
  15:../core/rl78_clock_sys.c **** //			This program is distributed in the hope that it will be useful,
  16:../core/rl78_clock_sys.c **** //			but WITHOUT ANY WARRANTY; without even the implied warranty of
  17:../core/rl78_clock_sys.c **** //			MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  18:../core/rl78_clock_sys.c **** //			GNU General Public License for more details.
  19:../core/rl78_clock_sys.c **** //
  20:../core/rl78_clock_sys.c **** //			You should have received a copy of the GNU General Public License
  21:../core/rl78_clock_sys.c **** //			along with this program.  If not, see <http://www.gnu.org/licenses/>.
  22:../core/rl78_clock_sys.c **** //---------------------------------------------------------------------------------------
  23:../core/rl78_clock_sys.c **** #include <inttypes.h>
  24:../core/rl78_clock_sys.c **** #include "../core/rl78_g13.h"
  25:../core/rl78_clock_sys.c **** #include "../core/rl78_clock_sys.h"
  26:../core/rl78_clock_sys.c **** #include "../core/iodefine.h"
  27:../core/rl78_clock_sys.c **** #include "../core/iodefine_ext.h"
  28:../core/rl78_clock_sys.c **** 
  29:../core/rl78_clock_sys.c **** 
  30:../core/rl78_clock_sys.c **** 
  31:../core/rl78_clock_sys.c **** //--------------------------------------------------------------------------------------------
  32:../core/rl78_clock_sys.c **** // Name: InitClockSys
  33:../core/rl78_clock_sys.c **** // Function: Initialise the clock system per the provided parameters
  34:../core/rl78_clock_sys.c **** //           if EXT clock oscillator is used, this function will set the alternate function
  35:../core/rl78_clock_sys.c **** //           on the appropriate GPIO pins
  36:../core/rl78_clock_sys.c **** // Parameters: Main Clock Mode, Subsystem Clock Mode
  37:../core/rl78_clock_sys.c **** // Returns: Result of operation
  38:../core/rl78_clock_sys.c **** //--------------------------------------------------------------------------------------------
  39:../core/rl78_clock_sys.c **** int InitClockSystem(unsigned char main_mode, unsigned char subsystem_mode){
  40                             		.loc 1 39 0
  41                             		; start of function
  42                             		; locals: 10 bytes
  43                             		; uses ES register
  44 0000 20 0A                   		subw	sp, #10
  45                             	.LCFI0:
  40:../core/rl78_clock_sys.c **** 
  41:../core/rl78_clock_sys.c **** 	uint8_t CMC_Value = 0;
  46                             		.loc 1 41 0
  47 0002 F1                      		clrb	a
  48 0003 98 09                   		mov	[sp+9], a
  42:../core/rl78_clock_sys.c **** 	uint8_t OSTC_Value = 0;
  49                             		.loc 1 42 0
  50 0005 F1                      		clrb	a
  51 0006 98 03                   		mov	[sp+3], a
  43:../core/rl78_clock_sys.c **** 	uint8_t OSTC_Comparison_Value = 0;
  52                             		.loc 1 43 0
  53 0008 F1                      		clrb	a
  54 0009 98 02                   		mov	[sp+2], a
  44:../core/rl78_clock_sys.c **** 	uint32_t XT1DelayCounter;
  45:../core/rl78_clock_sys.c **** 
  46:../core/rl78_clock_sys.c **** 	PIOR = 0x00;			// Peripheral I/O redirections cleared
  55                             		.loc 1 46 0
  56 000b C9 F0 77 00             		movw	r8, #119
  57 000f AD F0                   		movw	ax, r8
  58 0011 BD F2                   		movw	r10, ax
  59 0013 EA F2                   		movw	de, r10
  60 0015 F1                      		clrb	a
  61 0016 99                      		mov	[de], a
  47:../core/rl78_clock_sys.c **** 
  48:../core/rl78_clock_sys.c **** 	// Main clock source setting
  49:../core/rl78_clock_sys.c **** 	switch(main_mode){
  62                             		.loc 1 49 0
  63 0017 88 0E                   		mov	a, [sp+14]
  64 0019 31 8E                   		shrw	ax, 8
  65 001b BD F0                   		movw	r8, ax
  66 001d 44 01 00                		cmpw	ax, #1
  67 0020 61 F8                   		 sknz
  68 0022 EC 63 00 00             		 br	!!.L3
  69 0026 AD F0                   		movw	ax, r8
  70 0028 44 01 00                		cmpw	ax, #1
  71 002b 71 FF                   		 xor1	CY, a.7
  72 002d 61 F3                   		 sknh
  73 002f EC 42 00 00             		 br	!!.L4
  74 0033 AD F0                   		movw	ax, r8
  75 0035 44 00 00                		cmpw	ax, #0
  76 0038 61 F8                   		 sknz
  77 003a EC 5C 00 00             		 br	!!.L5
  78 003e EC 7B 00 00             		br	!!.L2
  79                             	.L4:
  80 0042 AD F0                   		movw	ax, r8
  81 0044 44 02 00                		cmpw	ax, #2
  82 0047 61 F8                   		 sknz
  83 0049 EC 6B 00 00             		 br	!!.L6
  84 004d AD F0                   		movw	ax, r8
  85 004f 44 03 00                		cmpw	ax, #3
  86 0052 61 F8                   		 sknz
  87 0054 EC 73 00 00             		 br	!!.L7
  88 0058 EC 7B 00 00             		br	!!.L2
  89                             	.L5:
  50:../core/rl78_clock_sys.c **** 
  51:../core/rl78_clock_sys.c **** 	case ONCHIP_HS:			// HS on-chip oscillator mode, make sure the clock speed is set in OPTION
  52:../core/rl78_clock_sys.c **** 		CMC_Value = X1_PINS_GPIO;
  90                             		.loc 1 52 0
  91 005c F1                      		clrb	a
  92 005d 98 09                   		mov	[sp+9], a
  53:../core/rl78_clock_sys.c **** 		break;
  93                             		.loc 1 53 0
  94 005f EC 84 00 00             		br	!!.L8
  95                             	.L3:
  54:../core/rl78_clock_sys.c **** 
  55:../core/rl78_clock_sys.c **** 	case X1_NORMAL:
  56:../core/rl78_clock_sys.c **** 		// External X1 oscillator is requested, prepare bit settings for write-once register CMC
  57:../core/rl78_clock_sys.c **** 		CMC_Value = X1_OSCILLATOR | X1_LOWSPD;
  96                             		.loc 1 57 0
  97 0063 51 40                   		mov	a, #64
  98 0065 98 09                   		mov	[sp+9], a
  58:../core/rl78_clock_sys.c **** 		break;
  99                             		.loc 1 58 0
 100 0067 EC 84 00 00             		br	!!.L8
 101                             	.L6:
  59:../core/rl78_clock_sys.c **** 	case X1_HIGHSPEED:
  60:../core/rl78_clock_sys.c **** 		CMC_Value = X1_OSCILLATOR | X1_HIGHSPD;
 102                             		.loc 1 60 0
 103 006b 51 41                   		mov	a, #65
 104 006d 98 09                   		mov	[sp+9], a
  61:../core/rl78_clock_sys.c **** 		break;
 105                             		.loc 1 61 0
 106 006f EC 84 00 00             		br	!!.L8
 107                             	.L7:
  62:../core/rl78_clock_sys.c **** 
  63:../core/rl78_clock_sys.c **** 	case X1_EXTERNAL:
  64:../core/rl78_clock_sys.c **** 		CMC_Value = X1_EXTERNAL_CLK;
 108                             		.loc 1 64 0
 109 0073 51 C0                   		mov	a, #-64
 110 0075 98 09                   		mov	[sp+9], a
  65:../core/rl78_clock_sys.c **** 		break;
 111                             		.loc 1 65 0
 112 0077 EC 84 00 00             		br	!!.L8
 113                             	.L2:
  66:../core/rl78_clock_sys.c **** 
  67:../core/rl78_clock_sys.c **** 	default:
  68:../core/rl78_clock_sys.c **** 		return -1;		// invalid value, return -1
 114                             		.loc 1 68 0
 115 007b 30 FF FF                		movw	ax, #-1
 116 007e B8 00                   		movw	[sp], ax
 117 0080 EC FC 01 00             		br	!!.L9
 118                             	.L8:
  69:../core/rl78_clock_sys.c **** 
  70:../core/rl78_clock_sys.c **** 	}
  71:../core/rl78_clock_sys.c **** 
  72:../core/rl78_clock_sys.c **** 	// Sub clock source setting
  73:../core/rl78_clock_sys.c **** 	switch(subsystem_mode){
 119                             		.loc 1 73 0
 120 0084 88 10                   		mov	a, [sp+16]
 121 0086 31 8E                   		shrw	ax, 8
 122 0088 BD F0                   		movw	r8, ax
 123 008a 44 02 00                		cmpw	ax, #2
 124 008d 61 F8                   		 sknz
 125 008f EC DE 00 00             		 br	!!.L11
 126 0093 AD F0                   		movw	ax, r8
 127 0095 44 02 00                		cmpw	ax, #2
 128 0098 71 FF                   		 xor1	CY, a.7
 129 009a 61 F3                   		 sknh
 130 009c EC BA 00 00             		 br	!!.L12
 131 00a0 AD F0                   		movw	ax, r8
 132 00a2 44 00 00                		cmpw	ax, #0
 133 00a5 61 F8                   		 sknz
 134 00a7 EC 05 01 00             		 br	!!.L24
 135 00ab AD F0                   		movw	ax, r8
 136 00ad 44 01 00                		cmpw	ax, #1
 137 00b0 61 F8                   		 sknz
 138 00b2 EC D4 00 00             		 br	!!.L14
 139 00b6 EC FC 00 00             		br	!!.L10
 140                             	.L12:
 141 00ba AD F0                   		movw	ax, r8
 142 00bc 44 03 00                		cmpw	ax, #3
 143 00bf 61 F8                   		 sknz
 144 00c1 EC E8 00 00             		 br	!!.L15
 145 00c5 AD F0                   		movw	ax, r8
 146 00c7 44 04 00                		cmpw	ax, #4
 147 00ca 61 F8                   		 sknz
 148 00cc EC F2 00 00             		 br	!!.L16
 149 00d0 EC FC 00 00             		br	!!.L10
 150                             	.L14:
  74:../core/rl78_clock_sys.c **** 	case ONCHIP_LS:
  75:../core/rl78_clock_sys.c **** 		CMC_Value = CMC_Value | XT1_PINS_GPIO;
  76:../core/rl78_clock_sys.c **** 		break;
  77:../core/rl78_clock_sys.c **** 
  78:../core/rl78_clock_sys.c **** 	case XT1_LOWPOWER:
  79:../core/rl78_clock_sys.c **** 		CMC_Value = CMC_Value | XT1_OSCILLATOR | XT1_LOWPWR;
 151                             		.loc 1 79 0
 152 00d4 88 09                   		mov	a, [sp+9]
 153 00d6 6C 10                   		or	a, #16
 154 00d8 98 09                   		mov	[sp+9], a
  80:../core/rl78_clock_sys.c **** 		break;
 155                             		.loc 1 80 0
 156 00da EC 06 01 00             		br	!!.L17
 157                             	.L11:
  81:../core/rl78_clock_sys.c **** 
  82:../core/rl78_clock_sys.c **** 	case XT1_NORMAL:
  83:../core/rl78_clock_sys.c **** 		CMC_Value = CMC_Value | XT1_OSCILLATOR | XT1_NORM;
 158                             		.loc 1 83 0
 159 00de 88 09                   		mov	a, [sp+9]
 160 00e0 6C 12                   		or	a, #18
 161 00e2 98 09                   		mov	[sp+9], a
  84:../core/rl78_clock_sys.c **** 		break;
 162                             		.loc 1 84 0
 163 00e4 EC 06 01 00             		br	!!.L17
 164                             	.L15:
  85:../core/rl78_clock_sys.c **** 
  86:../core/rl78_clock_sys.c **** 	case XT1_ULTRALOW:
  87:../core/rl78_clock_sys.c **** 		CMC_Value = CMC_Value | XT1_OSCILLATOR | XT1_ULP;
 165                             		.loc 1 87 0
 166 00e8 88 09                   		mov	a, [sp+9]
 167 00ea 6C 14                   		or	a, #20
 168 00ec 98 09                   		mov	[sp+9], a
  88:../core/rl78_clock_sys.c **** 		break;
 169                             		.loc 1 88 0
 170 00ee EC 06 01 00             		br	!!.L17
 171                             	.L16:
  89:../core/rl78_clock_sys.c **** 
  90:../core/rl78_clock_sys.c **** 	case XT1_EXTERNAL:
  91:../core/rl78_clock_sys.c **** 		CMC_Value = CMC_Value | XT1_EXTERNAL_CLK;
 172                             		.loc 1 91 0
 173 00f2 88 09                   		mov	a, [sp+9]
 174 00f4 6C 30                   		or	a, #48
 175 00f6 98 09                   		mov	[sp+9], a
  92:../core/rl78_clock_sys.c **** 		break;
 176                             		.loc 1 92 0
 177 00f8 EC 06 01 00             		br	!!.L17
 178                             	.L10:
  93:../core/rl78_clock_sys.c **** 
  94:../core/rl78_clock_sys.c **** 	default:
  95:../core/rl78_clock_sys.c **** 		return -1;		// invalid value, return -1
 179                             		.loc 1 95 0
 180 00fc 30 FF FF                		movw	ax, #-1
 181 00ff B8 00                   		movw	[sp], ax
 182 0101 EC FC 01 00             		br	!!.L9
 183                             	.L24:
  76:../core/rl78_clock_sys.c **** 
 184                             		.loc 1 76 0
 185 0105 00                      		nop
 186                             	.L17:
  96:../core/rl78_clock_sys.c **** 
  97:../core/rl78_clock_sys.c **** 
  98:../core/rl78_clock_sys.c **** 	}
  99:../core/rl78_clock_sys.c **** 
 100:../core/rl78_clock_sys.c **** 	// Various bit settings were prepared, now we can write to write-once register CMC
 101:../core/rl78_clock_sys.c **** 	CMC = CMC_Value;
 187                             		.loc 1 101 0
 188 0106 C9 F0 A0 FF             		movw	r8, #-96
 189 010a 88 09                   		mov	a, [sp+9]
 190 010c 9D F2                   		mov	r10, a
 191 010e AD F0                   		movw	ax, r8
 192 0110 BD F4                   		movw	r12, ax
 193 0112 EA F4                   		movw	de, r12
 194 0114 8D F2                   		mov	a, r10
 195 0116 99                      		mov	[de], a
 102:../core/rl78_clock_sys.c **** 
 103:../core/rl78_clock_sys.c **** 
 104:../core/rl78_clock_sys.c **** 	if(main_mode != ONCHIP_HS && main_mode != X1_EXTERNAL){
 196                             		.loc 1 104 0
 197 0117 88 0E                   		mov	a, [sp+14]
 198 0119 D1                      		cmp0	a
 199 011a 61 F8                   		 sknz
 200 011c EC 80 01 00             		 br	!!.L18
 201                             		.loc 1 104 0 is_stmt 0 discriminator 1
 202 0120 88 0E                   		mov	a, [sp+14]
 203 0122 4C 03                   		cmp	a, #3
 204 0124 61 F8                   		 sknz
 205 0126 EC 80 01 00             		 br	!!.L18
 105:../core/rl78_clock_sys.c **** 		// Set up oscillator stabilization timer for main clock oscillator XT
 106:../core/rl78_clock_sys.c **** 		//--------------------------------------------------------------------------------
 107:../core/rl78_clock_sys.c **** 		OSTS = STAB_WAIT_7;  // Set longest wait period
 206                             		.loc 1 107 0 is_stmt 1
 207 012a C9 F0 A3 FF             		movw	r8, #-93
 208 012e AD F0                   		movw	ax, r8
 209 0130 BD F2                   		movw	r10, ax
 210 0132 EA F2                   		movw	de, r10
 211 0134 51 07                   		mov	a, #7
 212 0136 99                      		mov	[de], a
 108:../core/rl78_clock_sys.c **** 		MSTOP = 0x00;		 // Clear MSTOP bit in CSC register
 213                             		.loc 1 108 0
 214 0137 C9 F0 A1 FF             		movw	r8, #-95
 215 013b AD F0                   		movw	ax, r8
 216 013d BD F4                   		movw	r12, ax
 217 013f FA F4                   		movw	hl, r12
 218 0141 8B                      		mov	a, [hl]
 219 0142 9D F2                   		mov	r10, a
 220 0144 5A F2 7F                		and	r10, #127
 221 0147 AD F0                   		movw	ax, r8
 222 0149 EA F4                   		movw	de, r12
 223 014b 8D F2                   		mov	a, r10
 224 014d 99                      		mov	[de], a
 109:../core/rl78_clock_sys.c **** 
 110:../core/rl78_clock_sys.c **** 		// Poll OSTC, it should equal a specific constant value as defined in the header, when
 111:../core/rl78_clock_sys.c **** 		// the stabilisation time is over
 112:../core/rl78_clock_sys.c **** 		//-------------------------------------------------------------------------------------
 113:../core/rl78_clock_sys.c **** 		OSTC_Comparison_Value = OSCSTAB_WAIT_7;
 225                             		.loc 1 113 0
 226 014e 51 FF                   		mov	a, #-1
 227 0150 98 02                   		mov	[sp+2], a
 228                             	.L20:
 114:../core/rl78_clock_sys.c **** 		for(;;){
 115:../core/rl78_clock_sys.c **** 			OSTC_Value = OSTC;						// Read OSTC
 229                             		.loc 1 115 0
 230 0152 C9 F0 A2 FF             		movw	r8, #-94
 231 0156 AD F0                   		movw	ax, r8
 232 0158 BD F2                   		movw	r10, ax
 233 015a FA F2                   		movw	hl, r10
 234 015c 8B                      		mov	a, [hl]
 235 015d 9D F0                   		mov	r8, a
 236 015f 98 03                   		mov	[sp+3], a
 116:../core/rl78_clock_sys.c **** 			OSTC_Value &= OSTC_Comparison_Value;	// AND it with mask comparison value
 237                             		.loc 1 116 0
 238 0161 88 02                   		mov	a, [sp+2]
 239 0163 72                      		mov	c, a
 240 0164 88 03                   		mov	a, [sp+3]
 241 0166 61 5A                   		and	a, c
 242 0168 98 03                   		mov	[sp+3], a
 117:../core/rl78_clock_sys.c **** 			if(OSTC_Value == OSTC_Comparison_Value){
 243                             		.loc 1 117 0
 244 016a 88 02                   		mov	a, [sp+2]
 245 016c 9D F0                   		mov	r8, a
 246 016e 88 03                   		mov	a, [sp+3]
 247 0170 4B F0                   		cmp	a, r8
 248 0172 61 E8                   		 skz
 249 0174 EC 7C 01 00             		 br	!!.L19
 118:../core/rl78_clock_sys.c **** 				break;
 250                             		.loc 1 118 0
 251 0178 EC 80 01 00             		br	!!.L18
 252                             	.L19:
 119:../core/rl78_clock_sys.c **** 			}
 120:../core/rl78_clock_sys.c **** 
 121:../core/rl78_clock_sys.c **** 		};
 253                             		.loc 1 121 0
 254 017c EC 52 01 00             		br	!!.L20
 255                             	.L18:
 122:../core/rl78_clock_sys.c **** 	}
 123:../core/rl78_clock_sys.c **** 
 124:../core/rl78_clock_sys.c **** 	if(subsystem_mode != ONCHIP_LS && subsystem_mode != XT1_EXTERNAL){
 256                             		.loc 1 124 0
 257 0180 88 10                   		mov	a, [sp+16]
 258 0182 D1                      		cmp0	a
 259 0183 61 F8                   		 sknz
 260 0185 EC D5 01 00             		 br	!!.L21
 261                             		.loc 1 124 0 is_stmt 0 discriminator 1
 262 0189 88 10                   		mov	a, [sp+16]
 263 018b 4C 04                   		cmp	a, #4
 264 018d 61 F8                   		 sknz
 265 018f EC D5 01 00             		 br	!!.L21
 125:../core/rl78_clock_sys.c **** 		// Enable sub clock oscillator XT1
 126:../core/rl78_clock_sys.c **** 		//---------------------------------
 127:../core/rl78_clock_sys.c **** 		XTSTOP = 0;
 266                             		.loc 1 127 0 is_stmt 1
 267 0193 C9 F0 A1 FF             		movw	r8, #-95
 268 0197 AD F0                   		movw	ax, r8
 269 0199 BD F4                   		movw	r12, ax
 270 019b FA F4                   		movw	hl, r12
 271 019d 8B                      		mov	a, [hl]
 272 019e 9D F2                   		mov	r10, a
 273 01a0 5A F2 BF                		and	r10, #-65
 274 01a3 AD F0                   		movw	ax, r8
 275 01a5 EA F4                   		movw	de, r12
 276 01a7 8D F2                   		mov	a, r10
 277 01a9 99                      		mov	[de], a
 128:../core/rl78_clock_sys.c **** 
 129:../core/rl78_clock_sys.c **** 		// Wait for the sub-clock oscillator to stabilise
 130:../core/rl78_clock_sys.c **** 		//-----------------------------------------------
 131:../core/rl78_clock_sys.c **** 		for(XT1DelayCounter = 0; XT1DelayCounter <= XT1_Stab_Time; XT1DelayCounter++){
 278                             		.loc 1 131 0
 279 01aa F6                      		clrw	ax
 280 01ab B8 04                   		movw	[sp+4], ax
 281 01ad F6                      		clrw	ax
 282 01ae B8 06                   		movw	[sp+6], ax
 283 01b0 EC C3 01 00             		br	!!.L22
 284                             	.L23:
 132:../core/rl78_clock_sys.c **** 			NOP();
 285                             		.loc 1 132 0 discriminator 3
 286                             	 ; 132 "../core/rl78_clock_sys.c" 1
 287 01b4 00                      		nop
 288                             	 ; 0 "" 2
 131:../core/rl78_clock_sys.c **** 			NOP();
 289                             		.loc 1 131 0 discriminator 3
 290 01b5 A8 04                   		movw ax, [sp+4]
 291 01b7 04 01 00                		addw ax, #1
 292 01ba B8 04                   		movw [sp+4], ax
 293 01bc A8 06                   		movw ax, [sp+6]
 294 01be 61 D8                   		sknc
 295 01c0 A1                      		incw ax
 296 01c1 B8 06                   		movw [sp+6],ax
 297                             	.L22:
 131:../core/rl78_clock_sys.c **** 			NOP();
 298                             		.loc 1 131 0 is_stmt 0 discriminator 1
 299 01c3 A8 06                   		movw	ax, [sp+6]
 300 01c5 44 00 00                		 cmpw	ax, #0
 301 01c8 A8 04                   		 movw	ax, [sp+4]
 302 01ca 61 F8                   		 sknz
 303 01cc 44 A0 00                		 cmpw	ax, #160
 304 01cf 61 E3                   		 skh
 305 01d1 EC B4 01 00             		 br	!!.L23
 306                             	.L21:
 133:../core/rl78_clock_sys.c **** 		}
 134:../core/rl78_clock_sys.c **** 
 135:../core/rl78_clock_sys.c **** 	}
 136:../core/rl78_clock_sys.c **** 	// Enable clock distribution
 137:../core/rl78_clock_sys.c **** 	//--------------------------
 138:../core/rl78_clock_sys.c **** 	OSMC = RTCLPC | WUTMMCK0;
 307                             		.loc 1 138 0 is_stmt 1
 308 01d5 C9 F0 F3 00             		movw	r8, #243
 309 01d9 AD F0                   		movw	ax, r8
 310 01db BD F2                   		movw	r10, ax
 311 01dd EA F2                   		movw	de, r10
 312 01df 51 90                   		mov	a, #-112
 313 01e1 99                      		mov	[de], a
 139:../core/rl78_clock_sys.c **** 	CSS = 0;					// CPU clock is set to Fmain
 314                             		.loc 1 139 0
 315 01e2 C9 F0 A4 FF             		movw	r8, #-92
 316 01e6 AD F0                   		movw	ax, r8
 317 01e8 BD F4                   		movw	r12, ax
 318 01ea FA F4                   		movw	hl, r12
 319 01ec 8B                      		mov	a, [hl]
 320 01ed 9D F2                   		mov	r10, a
 321 01ef 5A F2 BF                		and	r10, #-65
 322 01f2 AD F0                   		movw	ax, r8
 323 01f4 EA F4                   		movw	de, r12
 324 01f6 8D F2                   		mov	a, r10
 325 01f8 99                      		mov	[de], a
 140:../core/rl78_clock_sys.c **** 	return 0;
 326                             		.loc 1 140 0
 327 01f9 F6                      		clrw	ax
 328 01fa B8 00                   		movw	[sp], ax
 329                             	.L9:
 330 01fc A8 00                   		movw	ax, [sp]
 331 01fe BD F0                   		movw	r8, ax
 141:../core/rl78_clock_sys.c **** }
 332                             		.loc 1 141 0
 333 0200 10 0A                   		addw	sp, #10
 334 0202 D7                      		ret
 335                             	.LFE0:
 367                             	.Letext0:
 368                             		.file 2 "c:\\programdata\\gcc for renesas rl78 4.9.2.202201-gnurl78-elf\\rl78-elf\\rl78-elf\\rl78-
 369                             		.file 3 "c:\\programdata\\gcc for renesas rl78 4.9.2.202201-gnurl78-elf\\rl78-elf\\rl78-elf\\rl78-
 370                             		.file 4 "../core/../core/rl78_clock_sys.h"
 371                             		.file 5 "../core/../core/iodefine.h"
