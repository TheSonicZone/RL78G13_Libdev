   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	MDUC	=	0xf00e8
  26                             	MDAL	=	0xffff0
  27                             	MDAH	=	0xffff2
  28                             	MDBL	=	0xffff6
  29                             	MDBH	=	0xffff4
  30                             	MDCL	=	0xf00e0
  31                             	MDCH	=	0xf00e2
  32                             	.text
  33                             	.Ltext0:
  34                             		.comm	_Count,4,2
  35                             		.section	.text.main,"ax",@progbits
  36                             		.global	_main
  38                             	_main:
  39                             	.LFB0:
  40                             		.file 1 "../src/RL78_LibDev.c"
   1:../src/RL78_LibDev.c **** //------------------------------------------------------------------------------------------------
   2:../src/RL78_LibDev.c **** //
   3:../src/RL78_LibDev.c **** //					The Sonic Zone (PTY) LTD
   4:../src/RL78_LibDev.c **** //				Renesas RL78/G13 Code Library Development
   5:../src/RL78_LibDev.c **** //
   6:../src/RL78_LibDev.c **** //------------------------------------------------------------------------------------------------
   7:../src/RL78_LibDev.c **** 
   8:../src/RL78_LibDev.c **** 
   9:../src/RL78_LibDev.c **** // Included headers
  10:../src/RL78_LibDev.c **** #include "../core/iodefine.h"
  11:../src/RL78_LibDev.c **** #include "../core/iodefine_ext.h"
  12:../src/RL78_LibDev.c **** #include "../core/rl78_g13.h"
  13:../src/RL78_LibDev.c **** #include "../core/rl78_clock_sys.h"
  14:../src/RL78_LibDev.c **** #include "../RL78StdPeriphLib/rl78_interval_timer.h"
  15:../src/RL78_LibDev.c **** #include "../core/interrupt_handlers.h"
  16:../src/RL78_LibDev.c **** 
  17:../src/RL78_LibDev.c **** // Variables
  18:../src/RL78_LibDev.c **** unsigned long Count;
  19:../src/RL78_LibDev.c **** 
  20:../src/RL78_LibDev.c **** // Constants
  21:../src/RL78_LibDev.c **** 
  22:../src/RL78_LibDev.c **** // Definitions
  23:../src/RL78_LibDev.c **** #define LED01_PIN   PM4_bit.no3
  24:../src/RL78_LibDev.c **** #define LED01       P4_bit.no3
  25:../src/RL78_LibDev.c **** 
  26:../src/RL78_LibDev.c **** //------------------------------------------------------------------------------------------------
  27:../src/RL78_LibDev.c **** // Main Function
  28:../src/RL78_LibDev.c **** //------------------------------------------------------------------------------------------------
  29:../src/RL78_LibDev.c **** int main(void){
  41                             		.loc 1 29 0
  42                             		; start of function
  43                             		; locals: 2 bytes
  44                             		; outgoing: 4 bytes
  45                             		; uses ES register
  46 0000 20 06                   		subw	sp, #6
  47                             	.LCFI0:
  30:../src/RL78_LibDev.c **** 	uint8_t ITIFValue;
  31:../src/RL78_LibDev.c **** 
  32:../src/RL78_LibDev.c **** 	// System Initialisation
  33:../src/RL78_LibDev.c **** 	asm("DI");											// Ensure interrupts are disabled
  48                             		.loc 1 33 0
  49                             	 ; 33 "../src/RL78_LibDev.c" 1
  50 0002 71 7B FA                		DI
  51                             	 ; 0 "" 2
  34:../src/RL78_LibDev.c **** 	InitClockSystem(X1_HIGHSPEED, XT1_NORMAL);
  52                             		.loc 1 34 0
  53 0005 51 02                   		mov	a, #2
  54 0007 98 00                   		mov	[sp], a
  55 0009 51 02                   		mov	a, #2
  56 000b 98 02                   		mov	[sp+2], a
  57 000d FC 00 00 00             		call	!!%code(_InitClockSystem)
  35:../src/RL78_LibDev.c **** 	SetCPUClockX1();
  58                             		.loc 1 35 0
  59 0011 FC 00 00 00             		call	!!%code(_SetCPUClockX1)
  36:../src/RL78_LibDev.c **** 
  37:../src/RL78_LibDev.c **** 	// Peripheral Initialisation
  38:../src/RL78_LibDev.c **** 	//--------------------------
  39:../src/RL78_LibDev.c **** 	InitIntervalTimer(3000);
  60                             		.loc 1 39 0
  61 0015 30 B8 0B                		movw	ax, #3000
  62 0018 B8 00                   		movw	[sp], ax
  63 001a FC 00 00 00             		call	!!%code(_InitIntervalTimer)
  40:../src/RL78_LibDev.c **** 
  41:../src/RL78_LibDev.c **** 	// GPIO Initalisation
  42:../src/RL78_LibDev.c **** 	LED01_PIN = 0; // Make Pin as O/P
  64                             		.loc 1 42 0
  65 001e C9 F0 24 FF             		movw	r8, #-220
  66 0022 AD F0                   		movw	ax, r8
  67 0024 BD F4                   		movw	r12, ax
  68 0026 FA F4                   		movw	hl, r12
  69 0028 8B                      		mov	a, [hl]
  70 0029 9D F2                   		mov	r10, a
  71 002b 5A F2 F7                		and	r10, #-9
  72 002e AD F0                   		movw	ax, r8
  73 0030 EA F4                   		movw	de, r12
  74 0032 8D F2                   		mov	a, r10
  75 0034 99                      		mov	[de], a
  43:../src/RL78_LibDev.c **** 	LED01 = 0; // Turn LED ON
  76                             		.loc 1 43 0
  77 0035 C9 F0 04 FF             		movw	r8, #-252
  78 0039 AD F0                   		movw	ax, r8
  79 003b BD F4                   		movw	r12, ax
  80 003d FA F4                   		movw	hl, r12
  81 003f 8B                      		mov	a, [hl]
  82 0040 9D F2                   		mov	r10, a
  83 0042 5A F2 F7                		and	r10, #-9
  84 0045 AD F0                   		movw	ax, r8
  85 0047 EA F4                   		movw	de, r12
  86 0049 8D F2                   		mov	a, r10
  87 004b 99                      		mov	[de], a
  88                             	.L3:
  44:../src/RL78_LibDev.c **** 
  45:../src/RL78_LibDev.c **** 	// Simple loop to test clocks etc...
  46:../src/RL78_LibDev.c **** 
  47:../src/RL78_LibDev.c **** 	while(1){
  48:../src/RL78_LibDev.c **** 
  49:../src/RL78_LibDev.c **** 		// Flash LED by polling the interrupt flags
  50:../src/RL78_LibDev.c **** 		// User manual doesn't say you can do this but you can
  51:../src/RL78_LibDev.c **** 		ITIFValue = IF1H;
  89                             		.loc 1 51 0
  90 004c C9 F0 E3 FF             		movw	r8, #-29
  91 0050 AD F0                   		movw	ax, r8
  92 0052 BD F2                   		movw	r10, ax
  93 0054 FA F2                   		movw	hl, r10
  94 0056 8B                      		mov	a, [hl]
  95 0057 9D F0                   		mov	r8, a
  96 0059 98 05                   		mov	[sp+5], a
  52:../src/RL78_LibDev.c **** 		if((ITIFValue & 0x04) == 0x04){
  97                             		.loc 1 52 0
  98 005b 31 8E                   		shrw	ax, 8
  99 005d BD F0                   		movw	r8, ax
 100 005f 5A F0 04                		and	r8, #4
 101 0062 F4 F1                   		clrb	r9 ;andhi3 r8,r8,#4
 102 0064 AD F0                   		movw	ax, r8
 103 0066 44 00 00                		cmpw	ax, #0
 104 0069 61 F8                   		 sknz
 105 006b EC C6 00 00             		 br	!!.L2
  53:../src/RL78_LibDev.c **** 			LED01 = ~LED01;
 106                             		.loc 1 53 0
 107 006f C9 F2 04 FF             		movw	r10, #-252
 108 0073 C9 F0 04 FF             		movw	r8, #-252
 109 0077 AD F0                   		movw	ax, r8
 110 0079 BD F4                   		movw	r12, ax
 111 007b FA F4                   		movw	hl, r12
 112 007d 8B                      		mov	a, [hl]
 113 007e 9D F0                   		mov	r8, a
 114 0080 31 3A                   		shr	a, 3
 115 0082 9D F0                   		mov	r8, a
 116 0084 5A F0 01                		and	r8, #1
 117 0087 7A F0 FF                		xor	r8, #-1
 118 008a 5A F0 01                		and	r8, #1
 119 008d 5A F0 01                		and	r8, #1
 120 0090 8D F0                   		mov	a, r8
 121 0092 31 39                   		shl	a, 3
 122 0094 9D F0                   		mov	r8, a
 123 0096 AD F2                   		movw	ax, r10
 124 0098 BD F4                   		movw	r12, ax
 125 009a FA F4                   		movw	hl, r12
 126 009c 8B                      		mov	a, [hl]
 127 009d 9D F1                   		mov	r9, a
 128 009f 5A F1 F7                		and	r9, #-9
 129 00a2 8D F1                   		mov	a, r9
 130 00a4 6B F0                   		or	a, r8
 131 00a6 9D F0                   		mov	r8, a
 132 00a8 AD F2                   		movw	ax, r10
 133 00aa EA F4                   		movw	de, r12
 134 00ac 8D F0                   		mov	a, r8
 135 00ae 99                      		mov	[de], a
  54:../src/RL78_LibDev.c **** 			ITIF = 0;
 136                             		.loc 1 54 0
 137 00af C9 F0 E3 FF             		movw	r8, #-29
 138 00b3 AD F0                   		movw	ax, r8
 139 00b5 BD F4                   		movw	r12, ax
 140 00b7 FA F4                   		movw	hl, r12
 141 00b9 8B                      		mov	a, [hl]
 142 00ba 9D F2                   		mov	r10, a
 143 00bc 5A F2 FB                		and	r10, #-5
 144 00bf AD F0                   		movw	ax, r8
 145 00c1 EA F4                   		movw	de, r12
 146 00c3 8D F2                   		mov	a, r10
 147 00c5 99                      		mov	[de], a
 148                             	.L2:
  55:../src/RL78_LibDev.c **** 		}
  56:../src/RL78_LibDev.c **** //		LED01 = ~LED01; // toggle LED
  57:../src/RL78_LibDev.c **** //		for(Count = 0; Count < 10000; Count++);{
  58:../src/RL78_LibDev.c **** //			asm("nop"); // do nothing
  59:../src/RL78_LibDev.c **** //		}
  60:../src/RL78_LibDev.c **** 
  61:../src/RL78_LibDev.c **** 	}
 149                             		.loc 1 61 0
 150 00c6 EC 4C 00 00             		br	!!.L3
 151                             	.LFE0:
 153                             		.section	.text.INT_IT,"ax",@progbits
 154                             		.global	_INT_IT
 156                             	_INT_IT:
 157                             	.LFB1:
  62:../src/RL78_LibDev.c **** 	return 0;
  63:../src/RL78_LibDev.c **** }
  64:../src/RL78_LibDev.c **** 
  65:../src/RL78_LibDev.c **** 
  66:../src/RL78_LibDev.c **** //-------------------------------------------------------------------------------------------------
  67:../src/RL78_LibDev.c **** // Interrupt Handlers
  68:../src/RL78_LibDev.c **** //-------------------------------------------------------------------------------------------------
  69:../src/RL78_LibDev.c **** 
  70:../src/RL78_LibDev.c **** // definition of this function in inthander.c I changed to weak attribute so that it can be overrid
  71:../src/RL78_LibDev.c **** void INT_IT (void){
 158                             		.loc 1 71 0
 159                             		; start of function
 160                             		; push 8: ax bc de hl
 161                             		; uses ES register
 162 0000 61 CF                   		sel	rb0
 163 0002 C1                      		push	ax
 164                             	.LCFI1:
 165 0003 C3                      		push	bc
 166                             	.LCFI2:
 167 0004 C5                      		push	de
 168                             	.LCFI3:
 169 0005 C7                      		push	hl
 170                             	.LCFI4:
 171 0006 8E FD                   		mov	a, es
 172 0008 C1                      		push	ax
 173                             	.LCFI5:
  72:../src/RL78_LibDev.c **** 
  73:../src/RL78_LibDev.c **** 
  74:../src/RL78_LibDev.c **** }
 174                             		.loc 1 74 0
 175 0009 C0                      		pop	ax
 176 000a 9E FD                   		mov	es, a
 177 000c C6                      		pop	hl
 178 000d C4                      		pop	de
 179 000e C2                      		pop	bc
 180 000f C0                      		pop	ax
 181 0010 61 FC                   		reti
 182                             	.LFE1:
 252                             	.Letext0:
 253                             		.file 2 "../src/../core/iodefine.h"
 254                             		.file 3 "../src/../core/rl78_clock_sys.h"
 255                             		.file 4 "c:\\programdata\\gcc for renesas rl78 4.9.2.202201-gnurl78-elf\\rl78-elf\\rl78-elf\\rl78-
 256                             		.file 5 "c:\\programdata\\gcc for renesas rl78 4.9.2.202201-gnurl78-elf\\rl78-elf\\rl78-elf\\rl78-
