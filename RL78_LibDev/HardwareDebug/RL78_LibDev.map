
Allocating common symbols
Common symbol       size              file

Count               0x4               ./src/RL78_LibDev.o

Discarded input sections

 .text          0x0000000000000000        0x0 ./src/RL78_LibDev.o
 .data          0x0000000000000000        0x0 ./src/RL78_LibDev.o
 .bss           0x0000000000000000        0x0 ./src/RL78_LibDev.o
 COMMON         0x0000000000000000        0x4 ./src/RL78_LibDev.o
 .text          0x0000000000000000        0x0 ./core/hwinit.o
 .data          0x0000000000000000        0x0 ./core/hwinit.o
 .bss           0x0000000000000000        0x0 ./core/hwinit.o
 .text          0x0000000000000000        0x0 ./core/inthandler.o
 .data          0x0000000000000000        0x0 ./core/inthandler.o
 .bss           0x0000000000000000        0x0 ./core/inthandler.o
 .text.INT_IT   0x0000000000000000       0x12 ./core/inthandler.o
 .text          0x0000000000000000        0x0 ./core/option.o
 .data          0x0000000000000000        0x0 ./core/option.o
 .bss           0x0000000000000000        0x0 ./core/option.o
 .text          0x0000000000000000        0x0 ./core/rl78_clock_sys.o
 .data          0x0000000000000000        0x0 ./core/rl78_clock_sys.o
 .bss           0x0000000000000000        0x0 ./core/rl78_clock_sys.o
 .data          0x0000000000000000        0x0 ./core/start.o
 .bss           0x0000000000000000        0x0 ./core/start.o
 .text          0x0000000000000000        0x0 ./core/vects.o
 .data          0x0000000000000000        0x0 ./core/vects.o
 .bss           0x0000000000000000        0x0 ./core/vects.o
 .text          0x0000000000000000        0x0 ./RL78StdPeriphLib/rl78_interval_timer.o
 .data          0x0000000000000000        0x0 ./RL78StdPeriphLib/rl78_interval_timer.o
 .bss           0x0000000000000000        0x0 ./RL78StdPeriphLib/rl78_interval_timer.o

Memory Configuration

Name             Origin             Length             Attributes
VEC              0x0000000000000000 0x0000000000000004
IVEC             0x0000000000000004 0x00000000000000bc
OPT              0x00000000000000c0 0x0000000000000004
SEC_ID           0x00000000000000c4 0x000000000000000a
OCDSTAD          0x00000000000000ce 0x000000000000000a
OCDROM           0x000000000000fe00 0x0000000000000200
ROM              0x00000000000000d8 0x000000000000fd28
MIRROR           0x00000000000f2000 0x000000000000cf00
RAM              0x00000000000fef00 0x0000000000001000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD ./src/RL78_LibDev.o
LOAD ./core/hwinit.o
LOAD ./core/inthandler.o
LOAD ./core/option.o
LOAD ./core/rl78_clock_sys.o
LOAD ./core/start.o
LOAD ./core/vects.o
LOAD ./RL78StdPeriphLib/rl78_interval_timer.o
START GROUP
LOAD c:/programdata/gcc for renesas rl78 4.9.2.202201-gnurl78-elf/rl78-elf/rl78-elf/bin/../lib/gcc/rl78-elf/4.9.2.202201-GNURL78/../../../../rl78-elf/lib/g13\libm.a
LOAD c:/programdata/gcc for renesas rl78 4.9.2.202201-gnurl78-elf/rl78-elf/rl78-elf/bin/../lib/gcc/rl78-elf/4.9.2.202201-GNURL78/../../../../rl78-elf/lib/g13\libc.a
LOAD c:/programdata/gcc for renesas rl78 4.9.2.202201-gnurl78-elf/rl78-elf/rl78-elf/bin/../lib/gcc/rl78-elf/4.9.2.202201-GNURL78/g13\libgcc.a
END GROUP
LOAD c:/programdata/gcc for renesas rl78 4.9.2.202201-gnurl78-elf/rl78-elf/rl78-elf/bin/../lib/gcc/rl78-elf/4.9.2.202201-GNURL78/g13\libgcc.a
START GROUP
LOAD c:/programdata/gcc for renesas rl78 4.9.2.202201-gnurl78-elf/rl78-elf/rl78-elf/bin/../lib/gcc/rl78-elf/4.9.2.202201-GNURL78/../../../../rl78-elf/lib/g13\libc.a
LOAD c:/programdata/gcc for renesas rl78 4.9.2.202201-gnurl78-elf/rl78-elf/rl78-elf/bin/../lib/gcc/rl78-elf/4.9.2.202201-GNURL78/../../../../rl78-elf/lib/g13\libsim.a
END GROUP
LOAD c:/programdata/gcc for renesas rl78 4.9.2.202201-gnurl78-elf/rl78-elf/rl78-elf/bin/../lib/gcc/rl78-elf/4.9.2.202201-GNURL78/g13\libgcc.a

.vec            0x0000000000000000        0x4
 *(.vec)
 .vec           0x0000000000000000        0x4 ./core/vects.o
                0x0000000000000000                HardwareVectors

.vects          0x0000000000000004       0x7c
 *(.vects)
 .vects         0x0000000000000004       0x7c ./core/vects.o
                0x0000000000000004                Vectors

.option_bytes   0x00000000000000c0        0x4
 *(.option_bytes)
 .option_bytes  0x00000000000000c0        0x4 ./core/option.o
                0x00000000000000c0                Option_Bytes

.security_id    0x00000000000000c4        0xa
 *(.security_id)
 .security_id   0x00000000000000c4        0xa ./core/option.o
                0x00000000000000c4                Security_Id

.lowtext        0x00000000000000d8        0x0
 *(.plt)
 .plt           0x00000000000000d8        0x0 ./core/start.o
 *(.lowtext)
                0x00000000000000d8                . = ALIGN (0x2)

.tors           0x00000000000000d8        0x0
                0x00000000000000d8                __CTOR_LIST__ = .
                0x00000000000000d8                . = ALIGN (0x2)
                0x00000000000000d8                ___ctors = .
 *(.ctors)
                0x00000000000000d8                ___ctors_end = .
                0x00000000000000d8                __CTOR_END__ = .
                0x00000000000000d8                __DTOR_LIST__ = .
                0x00000000000000d8                ___dtors = .
 *(.dtors)
                0x00000000000000d8                ___dtors_end = .
                0x00000000000000d8                __DTOR_END__ = .
                0x00000000000000d8                . = ALIGN (0x2)
                0x00000000000000d8                _mdata = .

.text           0x00000000000000d8      0x6c2
 *(.text)
 .text          0x00000000000000d8       0x60 ./core/start.o
                0x00000000000000d8                _rl78_fini
                0x00000000000000da                PowerON_Reset
                0x0000000000000136                exit
 *(.text.*)
 .text.main     0x0000000000000138       0x53 ./src/RL78_LibDev.o
                0x0000000000000138                main
 .text.INT_IT   0x000000000000018b       0x61 ./src/RL78_LibDev.o
                0x000000000000018b                INT_IT
 .text.HardwareSetup
                0x00000000000001ec        0x1 ./core/hwinit.o
                0x00000000000001ec                HardwareSetup
 .text.INT_WDTI
                0x00000000000001ed       0x12 ./core/inthandler.o
                0x00000000000001ed                INT_WDTI
 .text.INT_LVI  0x00000000000001ff       0x12 ./core/inthandler.o
                0x00000000000001ff                INT_LVI
 .text.INT_P0   0x0000000000000211       0x12 ./core/inthandler.o
                0x0000000000000211                INT_P0
 .text.INT_P1   0x0000000000000223       0x12 ./core/inthandler.o
                0x0000000000000223                INT_P1
 .text.INT_P2   0x0000000000000235       0x12 ./core/inthandler.o
                0x0000000000000235                INT_P2
 .text.INT_P3   0x0000000000000247       0x12 ./core/inthandler.o
                0x0000000000000247                INT_P3
 .text.INT_P4   0x0000000000000259       0x12 ./core/inthandler.o
                0x0000000000000259                INT_P4
 .text.INT_P5   0x000000000000026b       0x12 ./core/inthandler.o
                0x000000000000026b                INT_P5
 .text.INT_ST2  0x000000000000027d       0x12 ./core/inthandler.o
                0x000000000000027d                INT_ST2
 .text.INT_SR2  0x000000000000028f       0x12 ./core/inthandler.o
                0x000000000000028f                INT_SR2
 .text.INT_SRE2
                0x00000000000002a1       0x12 ./core/inthandler.o
                0x00000000000002a1                INT_SRE2
 .text.INT_DMA0
                0x00000000000002b3       0x12 ./core/inthandler.o
                0x00000000000002b3                INT_DMA0
 .text.INT_DMA1
                0x00000000000002c5       0x12 ./core/inthandler.o
                0x00000000000002c5                INT_DMA1
 .text.INT_ST0  0x00000000000002d7       0x12 ./core/inthandler.o
                0x00000000000002d7                INT_ST0
 .text.INT_SR0  0x00000000000002e9       0x12 ./core/inthandler.o
                0x00000000000002e9                INT_SR0
 .text.INT_TM01H
                0x00000000000002fb       0x12 ./core/inthandler.o
                0x00000000000002fb                INT_TM01H
 .text.INT_ST1  0x000000000000030d       0x12 ./core/inthandler.o
                0x000000000000030d                INT_ST1
 .text.INT_SR1  0x000000000000031f       0x12 ./core/inthandler.o
                0x000000000000031f                INT_SR1
 .text.INT_TM03H
                0x0000000000000331       0x12 ./core/inthandler.o
                0x0000000000000331                INT_TM03H
 .text.INT_IICA0
                0x0000000000000343       0x12 ./core/inthandler.o
                0x0000000000000343                INT_IICA0
 .text.INT_TM00
                0x0000000000000355       0x12 ./core/inthandler.o
                0x0000000000000355                INT_TM00
 .text.INT_TM01
                0x0000000000000367       0x12 ./core/inthandler.o
                0x0000000000000367                INT_TM01
 .text.INT_TM02
                0x0000000000000379       0x12 ./core/inthandler.o
                0x0000000000000379                INT_TM02
 .text.INT_TM03
                0x000000000000038b       0x12 ./core/inthandler.o
                0x000000000000038b                INT_TM03
 .text.INT_AD   0x000000000000039d       0x12 ./core/inthandler.o
                0x000000000000039d                INT_AD
 .text.INT_RTC  0x00000000000003af       0x12 ./core/inthandler.o
                0x00000000000003af                INT_RTC
 .text.INT_KR   0x00000000000003c1       0x12 ./core/inthandler.o
                0x00000000000003c1                INT_KR
 .text.INT_TM04
                0x00000000000003d3       0x12 ./core/inthandler.o
                0x00000000000003d3                INT_TM04
 .text.INT_TM05
                0x00000000000003e5       0x12 ./core/inthandler.o
                0x00000000000003e5                INT_TM05
 .text.INT_TM06
                0x00000000000003f7       0x12 ./core/inthandler.o
                0x00000000000003f7                INT_TM06
 .text.INT_TM07
                0x0000000000000409       0x12 ./core/inthandler.o
                0x0000000000000409                INT_TM07
 .text.INT_P6   0x000000000000041b       0x12 ./core/inthandler.o
                0x000000000000041b                INT_P6
 .text.INT_P7   0x000000000000042d       0x12 ./core/inthandler.o
                0x000000000000042d                INT_P7
 .text.INT_P8   0x000000000000043f       0x12 ./core/inthandler.o
                0x000000000000043f                INT_P8
 .text.INT_P9   0x0000000000000451       0x12 ./core/inthandler.o
                0x0000000000000451                INT_P9
 .text.INT_P10  0x0000000000000463       0x12 ./core/inthandler.o
                0x0000000000000463                INT_P10
 .text.INT_P11  0x0000000000000475       0x12 ./core/inthandler.o
                0x0000000000000475                INT_P11
 .text.INT_MD   0x0000000000000487       0x12 ./core/inthandler.o
                0x0000000000000487                INT_MD
 .text.INT_FL   0x0000000000000499       0x12 ./core/inthandler.o
                0x0000000000000499                INT_FL
 .text.INT_BRK_I
                0x00000000000004ab       0x12 ./core/inthandler.o
                0x00000000000004ab                INT_BRK_I
 .text.SetCPUClockX1
                0x00000000000004bd       0x46 ./core/rl78_clock_sys.o
                0x00000000000004bd                SetCPUClockX1
 .text.InitClockSystem
                0x0000000000000503      0x203 ./core/rl78_clock_sys.o
                0x0000000000000503                InitClockSystem
 .text.InitIntervalTimer
                0x0000000000000706       0x94 ./RL78StdPeriphLib/rl78_interval_timer.o
                0x0000000000000706                InitIntervalTimer
                0x000000000000079a                etext = .
                0x000000000000079a                . = ALIGN (0x2)
                0x0000000000000000                PROVIDE (__rl78_abs__, 0x0)

.init
 *(.init)

.fini
 *(.fini)

.got
 *(.got)
 *(.got.plt)
                0x0000000000002000                PROVIDE (__mirror, 0x2000)
                0x000000000000ef00                PROVIDE (__mirror_end, (__mirror + 0xcf00))
                0x0000000000002000                PROVIDE (__rodata, ADDR (.rodata))

.rodata         0x0000000000002000        0x0
                0x0000000000002000                . = ALIGN (0x2)
 *(.rodata)
 *(.rodata.*)
                0x0000000000002000                _erodata = .
                0x0000000000000001                ASSERT (! ((SIZEOF (.rodata) > (__mirror_end - __mirror))), Error: Too much const data-the size exceeds the mirror area. Please change some of them from 'const' to 'const __far' and uncheck 'Data sections (-fdata-sections)' of optimaize option.)
                0x0000000000000001                ASSERT (! ((((((SIZEOF (.rodata) <= (__mirror_end - __mirror)) && (SIZEOF (.rodata) > 0x0)) && (ABSOLUTE (__rodata) >= __mirror_end)) && (ABSOLUTE (.) > __mirror_end)) && (ADDR (.text) < __rodata))), Error: No room left for const data- the start address exceeds the mirror area. Please move the .text section from lower address to higher address.)
                0x0000000000000001                ASSERT (! ((((((SIZEOF (.rodata) <= (__mirror_end - __mirror)) && (SIZEOF (.rodata) > 0x0)) && (ABSOLUTE (__rodata) >= __mirror_end)) && (ABSOLUTE (.) > __mirror_end)) && (__rodata < ADDR (.text)))), Error: No room left for const data- the start address exceeds the mirror area. Please check the map file.)
                0x0000000000000001                ASSERT (! ((((((SIZEOF (.rodata) <= (__mirror_end - __mirror)) && (SIZEOF (.rodata) > 0x0)) && (ABSOLUTE (__rodata) < __mirror_end)) && (ABSOLUTE (.) > __mirror_end)) && (ADDR (.text) < __rodata))), Error : No room left for const data-the end address exceeds the mirror area. Please move the .text section from lower address to higher address.)
                0x0000000000000001                ASSERT (! ((((((SIZEOF (.rodata) <= (__mirror_end - __mirror)) && (SIZEOF (.rodata) > 0x0)) && (ABSOLUTE (__rodata) < __mirror_end)) && (ABSOLUTE (.) > __mirror_end)) && (__rodata < ADDR (.text)))), Error : No room left for const data-the end address exceeds the mirror area. Please check the map file.)

.frodata        0x000000000000079a        0x0
                0x000000000000079a                . = ALIGN (0x2)
 *(.frodata)
 *(.frodata.*)
                0x000000000000079a                _efrodata = .

.eh_frame_hdr
 *(.eh_frame_hdr)

.eh_frame
 *(.eh_frame)

.jcr            0x000000000000079a        0x0
 *(.jcr)
                0x000000000000079a                . = ALIGN (0x2)

.data           0x00000000000fef00        0x0 load address 0x00000000000000d8
                0x00000000000fef00                . = ALIGN (0x2)
                0x00000000000fef00                _data = .
 *(.data)
 *(.data.*)
                0x00000000000fef00                . = ALIGN (0x2)
                0x00000000000fef00                _edata = .
                0x0000000000000000                PROVIDE (__romdatacopysize, SIZEOF (.data))

.bss            0x00000000000fef00        0x0
                0x00000000000fef00                . = ALIGN (0x2)
                0x00000000000fef00                _bss = .
 *(.bss)
 *(.bss.**)
                0x00000000000fef00                . = ALIGN (0x2)
 *(COMMON)
                0x00000000000fef00                . = ALIGN (0x2)
                0x00000000000fef00                _ebss = .
                0x00000000000fef00                . = ALIGN (0x80)
                0x00000000000fef00                _end = .
                0x0000000000000064                PROVIDE (stack_size, 0x64)

.stack          0x00000000000ffedc        0x0
                0x00000000000ffedc                _stack = .
                0x0000000000000001                ASSERT ((_stack > (_end + stack_size)), Error: Too much data - no room left for the stack)
OUTPUT(RL78_LibDev.elf elf32-rl78)

.debug_frame    0x0000000000000000      0xb64
 .debug_frame   0x0000000000000000       0x84 ./src/RL78_LibDev.o
 .debug_frame   0x0000000000000084       0x24 ./core/hwinit.o
 .debug_frame   0x00000000000000a8      0xa54 ./core/inthandler.o
 .debug_frame   0x0000000000000afc       0x3c ./core/rl78_clock_sys.o
 .debug_frame   0x0000000000000b38       0x2c ./RL78StdPeriphLib/rl78_interval_timer.o

.debug_info     0x0000000000000000      0xa86
 .debug_info    0x0000000000000000      0x1e2 ./src/RL78_LibDev.o
 .debug_info    0x00000000000001e2       0x37 ./core/hwinit.o
 .debug_info    0x0000000000000219      0x2df ./core/inthandler.o
 .debug_info    0x00000000000004f8       0x78 ./core/option.o
 .debug_info    0x0000000000000570      0x250 ./core/rl78_clock_sys.o
 .debug_info    0x00000000000007c0       0x89 ./core/start.o
 .debug_info    0x0000000000000849       0x6e ./core/vects.o
 .debug_info    0x00000000000008b7      0x1cf ./RL78StdPeriphLib/rl78_interval_timer.o

.debug_abbrev   0x0000000000000000      0x3a3
 .debug_abbrev  0x0000000000000000       0xdd ./src/RL78_LibDev.o
 .debug_abbrev  0x00000000000000dd       0x2c ./core/hwinit.o
 .debug_abbrev  0x0000000000000109       0x2c ./core/inthandler.o
 .debug_abbrev  0x0000000000000135       0x45 ./core/option.o
 .debug_abbrev  0x000000000000017a       0xe8 ./core/rl78_clock_sys.o
 .debug_abbrev  0x0000000000000262       0x14 ./core/start.o
 .debug_abbrev  0x0000000000000276       0x4c ./core/vects.o
 .debug_abbrev  0x00000000000002c2       0xe1 ./RL78StdPeriphLib/rl78_interval_timer.o

.debug_aranges  0x0000000000000000      0x240
 .debug_aranges
                0x0000000000000000       0x28 ./src/RL78_LibDev.o
 .debug_aranges
                0x0000000000000028       0x20 ./core/hwinit.o
 .debug_aranges
                0x0000000000000048      0x160 ./core/inthandler.o
 .debug_aranges
                0x00000000000001a8       0x18 ./core/option.o
 .debug_aranges
                0x00000000000001c0       0x28 ./core/rl78_clock_sys.o
 .debug_aranges
                0x00000000000001e8       0x20 ./core/start.o
 .debug_aranges
                0x0000000000000208       0x18 ./core/vects.o
 .debug_aranges
                0x0000000000000220       0x20 ./RL78StdPeriphLib/rl78_interval_timer.o

.debug_ranges   0x0000000000000000      0x1a0
 .debug_ranges  0x0000000000000000       0x18 ./src/RL78_LibDev.o
 .debug_ranges  0x0000000000000018       0x10 ./core/hwinit.o
 .debug_ranges  0x0000000000000028      0x150 ./core/inthandler.o
 .debug_ranges  0x0000000000000178       0x18 ./core/rl78_clock_sys.o
 .debug_ranges  0x0000000000000190       0x10 ./RL78StdPeriphLib/rl78_interval_timer.o

.debug_line     0x0000000000000000      0xc22
 .debug_line    0x0000000000000000      0x1ba ./src/RL78_LibDev.o
 .debug_line    0x00000000000001ba       0x47 ./core/hwinit.o
 .debug_line    0x0000000000000201      0x3dd ./core/inthandler.o
 .debug_line    0x00000000000005de       0x31 ./core/option.o
 .debug_line    0x000000000000060f      0x2c4 ./core/rl78_clock_sys.o
 .debug_line    0x00000000000008d3      0x15a ./core/start.o
 .debug_line    0x0000000000000a2d       0x30 ./core/vects.o
 .debug_line    0x0000000000000a5d      0x1c5 ./RL78StdPeriphLib/rl78_interval_timer.o

.debug_str      0x0000000000000000      0x51a
 .debug_str     0x0000000000000000      0x224 ./src/RL78_LibDev.o
                                        0x260 (size before relaxing)
 .debug_str     0x0000000000000224       0x1f ./core/hwinit.o
                                        0x13a (size before relaxing)
 .debug_str     0x0000000000000243      0x15b ./core/inthandler.o
                                        0x27d (size before relaxing)
 .debug_str     0x000000000000039e       0x33 ./core/option.o
                                        0x15c (size before relaxing)
 .debug_str     0x00000000000003d1       0xac ./core/rl78_clock_sys.o
                                        0x2dc (size before relaxing)
 .debug_str     0x000000000000047d       0x20 ./core/vects.o
                                        0x14c (size before relaxing)
 .debug_str     0x000000000000049d       0x7d ./RL78StdPeriphLib/rl78_interval_timer.o
                                        0x24e (size before relaxing)

.comment        0x0000000000000000       0xa0
 .comment       0x0000000000000000       0xa0 ./src/RL78_LibDev.o
                                         0xa1 (size before relaxing)
 .comment       0x0000000000000000       0xa1 ./core/hwinit.o
 .comment       0x0000000000000000       0xa1 ./core/inthandler.o
 .comment       0x0000000000000000       0xa1 ./core/option.o
 .comment       0x0000000000000000       0xa1 ./core/rl78_clock_sys.o
 .comment       0x0000000000000000       0xa1 ./core/vects.o
 .comment       0x0000000000000000       0xa1 ./RL78StdPeriphLib/rl78_interval_timer.o
